//
//  ExtensionDoc_fromAE.swift
//  Aurora Editor
//
//  Created by Wesley de Groot on 09/07/2024.
//  Copyright Â© 2024 Aurora Company. All rights reserved.
//

import Foundation
import AEExtensionKit

/// This class does not execute any code, this is made to generate documentation for the extension system
/// This are items which an extension can expect from AuroraEditor.
public protocol ExtensionDocumentationFromAuroraEditor {

    /// Did open file
    ///
    /// - Parameter file: file name
    /// - Parameter contents: file contents
    func didOpen(file: String, contents: String)

    /// Did open file (in workspace)
    ///
    /// - Parameter workspace: workspace name
    /// - Parameter file: file name
    /// - Parameter contents: file contents
    func didOpen(workspace: String, file: String, contents: String)

    /// Did save file
    ///
    /// - Parameter file: filename
    func didSave(file: String)

    /// Did move caret to position
    ///
    /// - Parameters row: row
    /// - Parameter column: column
    func didMoveCaret(row: Int, column: Int)

    /// Did activate tab
    ///
    /// - Parameter file: filename of the tab
    func didActivateTab(file: String)

    /// Did deactivate tab
    ///
    /// - Parameter file: filename of the tab
    func didDeactivateTab(file: String)

    /// Did toggle navigator pane
    ///
    /// - Parameter visible: is the pane visible?
    func didToggleNavigatorPane(visible: Bool)

    /// Did toggle inspector pane
    ///
    /// - Parameter visible: is the pane visible?
    func didToggleInspectorPane(visible: Bool)

    /// Register callback
    ///
    /// - Parameter callback: Callback handler ``AuroraAPI``
    /// - note: Only required for Swift Extensions
    func registerCallback(callback: (AuroraAPI) -> Bool)

    /// Did open a view generated by an extension
    ///
    /// - Parameter type: View type
    /// - Parameter extension: Extension name
    /// - Parameter view: View
    func didOpenExtensionView(type: String, extension: String, view: Any)

    /// Did close a view generated by an extension
    ///
    /// - Parameter type: View type
    /// - Parameter extension: Extension name
    /// - Parameter view: View
    func didCloseExtensionView(type: String, extension: String, view: Any)

    /// Did fail to generate a view from an extension
    /// - Parameter type: View type
    /// - Parameter extension: Extension name
    /// - Parameter view: View
    func didFailToOpenExtensionView(type: String, extension: String, view: Any)

    /// Did click on notification
    ///
    /// - Parameter identifier: Notification identifier
    /// - Parameter extension: Extension name
    /// - Parameter title: Notification title
    /// - Parameter message: Notification message
    func didClickOnNotification(
        identifier: String,
        extension: String,
        title: String,
        message: String
    )

    /// Did dismiss an notification
    ///
    /// - Parameter identifier: Notification identifier
    /// - Parameter extension: Extension name
    func didDismissNotification(identifier: String, extension: String)
}
